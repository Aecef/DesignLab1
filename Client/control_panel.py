# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'control_panel.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.tapt


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QVBoxLayout

X = 0
Y = 0


class control_panel(QtWidgets.QMainWindow):
    def __init__(self, parent = None):
        super().__init__(parent)
        self.init_gui()

    def init_gui(self):
        self.window = QtWidgets.QWidget()
        self.layout = QtWidgets.QVBoxLayout()
        self.setCentralWidget(self.window)
        self.window.setLayout(self.layout)

        self.setWindowFlag(QtCore.Qt.FramelessWindowHint)
        self.setObjectName("control_panel")

        self.setFixedSize(800, 480)
        self.setStyleSheet(
            "background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(153, 170, 181, 255), stop:0.431818 rgba(153, 170, 181, 255), stop:0.727273 rgba(100, 110, 117, 255), stop:0.965909 rgba(44, 47, 51, 255), stop:1 rgba(35, 39, 42, 255));")

        self.title_bar = title_bar()
        self.layout.addWidget(self.title_bar)

    def mouseMoveEvent(self, event):
        super(control_panel, self).mouseMoveEvent(event)
        if self.leftClick == True:
            self.move(event.globalPos().x() - X, event.globalPos().y() - Y)

    def mousePressEvent(self, event):
        if event.pos().y() <= 30:
            super(control_panel, self).mousePressEvent(event)
            if event.button() == QtCore.Qt.LeftButton:
                self.leftClick = True
                global X, Y
                X = event.pos().x()
                Y = event.pos().y()

    def mouseReleaseEvent(self, event):
        super(control_panel, self).mouseReleaseEvent(event)
        self.leftClick = False


class title_bar(QtWidgets.QWidget):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.setObjectName("title_bar")

        self.layout = QtWidgets.QVBoxLayout()
        self.setLayout(self.layout)

        self.textbox = QtWidgets.QLineEdit()
        self.layout.addWidget(self.textbox)

        self.setStyleSheet("background-color: rgb(30, 34, 36);")
